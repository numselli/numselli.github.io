var breakpoints = function () { "use strict"; function e(e) { t.init(e) } var t = { list: null, media: {}, events: [], init: function (e) { t.list = e, window.addEventListener("resize", t.poll), window.addEventListener("orientationchange", t.poll), window.addEventListener("load", t.poll), window.addEventListener("fullscreenchange", t.poll) }, active: function (e) { var n, a, s, i, r, d, c; if (!(e in t.media)) { if (">=" == e.substr(0, 2) ? (a = "gte", n = e.substr(2)) : "<=" == e.substr(0, 2) ? (a = "lte", n = e.substr(2)) : ">" == e.substr(0, 1) ? (a = "gt", n = e.substr(1)) : "<" == e.substr(0, 1) ? (a = "lt", n = e.substr(1)) : "!" == e.substr(0, 1) ? (a = "not", n = e.substr(1)) : (a = "eq", n = e), n && n in t.list) if (i = t.list[n], Array.isArray(i)) { if (r = parseInt(i[0]), d = parseInt(i[1]), isNaN(r)) { if (isNaN(d)) return; c = i[1].substr(String(d).length) } else c = i[0].substr(String(r).length); if (isNaN(r)) switch (a) { case "gte": s = "screen"; break; case "lte": s = "screen and (max-width: " + d + c + ")"; break; case "gt": s = "screen and (min-width: " + (d + 1) + c + ")"; break; case "lt": s = "screen and (max-width: -1px)"; break; case "not": s = "screen and (min-width: " + (d + 1) + c + ")"; break; default: s = "screen and (max-width: " + d + c + ")" } else if (isNaN(d)) switch (a) { case "gte": s = "screen and (min-width: " + r + c + ")"; break; case "lte": s = "screen"; break; case "gt": s = "screen and (max-width: -1px)"; break; case "lt": s = "screen and (max-width: " + (r - 1) + c + ")"; break; case "not": s = "screen and (max-width: " + (r - 1) + c + ")"; break; default: s = "screen and (min-width: " + r + c + ")" } else switch (a) { case "gte": s = "screen and (min-width: " + r + c + ")"; break; case "lte": s = "screen and (max-width: " + d + c + ")"; break; case "gt": s = "screen and (min-width: " + (d + 1) + c + ")"; break; case "lt": s = "screen and (max-width: " + (r - 1) + c + ")"; break; case "not": s = "screen and (max-width: " + (r - 1) + c + "), screen and (min-width: " + (d + 1) + c + ")"; break; default: s = "screen and (min-width: " + r + c + ") and (max-width: " + d + c + ")" } } else s = "(" == i.charAt(0) ? "screen and " + i : i; t.media[e] = !!s && s } return t.media[e] !== !1 && window.matchMedia(t.media[e]).matches }, on: function (e, n) { t.events.push({ query: e, handler: n, state: !1 }), t.active(e) && n() }, poll: function () { var e, n; for (e = 0; e < t.events.length; e++)n = t.events[e], t.active(n.query) ? n.state || (n.state = !0, n.handler()) : n.state && (n.state = !1) } }; return e._ = t, e.on = function (e, n) { t.on(e, n) }, e.active = function (e) { return t.active(e) }, e }(); !function (e, t) { "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? module.exports = t() : e.breakpoints = t() }(this, function () { return breakpoints });
(function ($) {var $window = $(window),$body = $('body'),$wrapper = $('#wrapper'),$header = $('#nav'),$main = $('#main'),$main_articles = $main.children('article');breakpoints({xlarge: ['1281px', '1680px'],large: ['981px', '1280px'],medium: ['737px', '980px'],small: ['481px', '736px'],xsmall: ['361px', '480px'],xxsmall: [null, '360px']});var delay = 325, locked = false;$main._show = function (id, initial) {var $article = $main_articles.filter('#' + id);if ($article.length == 0)return;if (locked || (typeof initial != 'undefined' && initial === true)) {$body.addClass('is-switching');$body.addClass('is-article-visible');$main_articles.removeClass('active');$header.hide();$main.show();$article.show();$article.addClass('active');locked = false;setTimeout(function () {$body.removeClass('is-switching');}, (initial ? 1000 : 0));return;}locked = true;if ($body.hasClass('is-article-visible')) {var $currentArticle = $main_articles.filter('.active');$currentArticle.removeClass('active');setTimeout(function () {$currentArticle.hide();$article.show();setTimeout(function () {$article.addClass(' ');$window.scrollTop(0).triggerHandler('resize.flexbox-fix');setTimeout(function () {locked = false;}, delay);}, 25);}, delay);}else {$body.addClass('is-article-visible');setTimeout(function () {$header.hide();$main.show();$article.show();setTimeout(function () {$article.addClass('active');$window.scrollTop(0).triggerHandler('resize.flexbox-fix');setTimeout(function () {locked = false;}, delay);}, 25);}, delay);}};$main._hide = function (addState) {var $article = $main_articles.filter('.active');if (!$body.hasClass('is-article-visible'))return;if (typeof addState != 'undefined' && addState === true)history.pushState(null, null, '#');if (locked) {$body.addClass('is-switching');$article.removeClass('active');$article.hide();$main.hide();$header.show();$body.removeClass('is-article-visible');locked = false;$body.removeClass('is-switching');$window.scrollTop(0).triggerHandler('resize.flexbox-fix');return;}locked = true;$article.removeClass('active');setTimeout(function () {$article.hide();$main.hide();$header.show();setTimeout(function () {$body.removeClass('is-article-visible');$window.scrollTop(0).triggerHandler('resize.flexbox-fix');setTimeout(function () {locked = false;}, delay);}, 25);}, delay);};$window.on('hashchange', function (event) {if (location.hash == '' || location.hash == '#') {event.preventDefault();event.stopPropagation();$main._hide();}else if ($main_articles.filter(location.hash).length > 0) {event.preventDefault();event.stopPropagation();$main._show(location.hash.substr(1));}});if ('scrollRestoration' in history)history.scrollRestoration = 'manual';else {var oldScrollPos = 0,scrollPos = 0,$htmlbody = $('html,body');$window.on('scroll', function () {oldScrollPos = scrollPos;scrollPos = $htmlbody.scrollTop();}).on('hashchange', function () {$window.scrollTop(oldScrollPos);});}$main.hide();$main_articles.hide();if (location.hash != ''&& location.hash != '#')$window.on('load', function () {$main._show(location.hash.substr(1), true);});})(jQuery);
